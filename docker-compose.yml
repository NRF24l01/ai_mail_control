version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    expose:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ai_mail_net

  redis:
    image: redis:7
    restart: always
    expose:
      - "6379"
    networks:
      - ai_mail_net

  mailworker:
    build:
      context: .
      dockerfile: MailWorker/Dockerfile
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_LOGIN: postgres
      DB_PASSWORD: password
      DB_PORT: 5432
      DB_DATABASE: postgres
      MAIL_HOST: ${MAIL_HOST}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    networks:
      - ai_mail_net

  backend:
    build:
      context: .
      dockerfile: mail_backend/Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_LOGIN: postgres
      DB_PASSWORD: password
      DB_DATABASE: postgres
      PROD_MODE: true
    ports:
      - "8000:8000"
    networks:
      - ai_mail_net

volumes:
  pgdata:

networks:
  ai_mail_net:
    driver: bridge
